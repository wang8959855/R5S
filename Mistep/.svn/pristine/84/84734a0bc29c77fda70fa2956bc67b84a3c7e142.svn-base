//
//  PZCityTool.m
//  Mistep
//
//  Created by 迈诺科技 on 16/7/25.
//  Copyright © 2016年 huichenghe. All rights reserved.
//

#import "PZCityTool.h"
#import "CityNumber.h"
#import <CoreLocation/CoreLocation.h>
#import "ZCChinaLocation.h"
#import "BleTool.h"

static PZCityTool *instance;

@interface PZCityTool()<CLLocationManagerDelegate>

@property(nonatomic, strong) CLLocationManager *locationManager;

@end

@implementation PZCityTool

+ (PZCityTool *)sharedInstance
{
    if (!instance)
    {
        instance = [[PZCityTool alloc] init];
        [instance initData];
    }
    return instance;
}

- (void)initData
{
    if ([CLLocationManager locationServicesEnabled])
    {
        self.locationManager = [[CLLocationManager alloc] init];
        self.locationManager.delegate = self;
        self.locationManager.desiredAccuracy = kCLLocationAccuracyKilometer;
        self.locationManager.distanceFilter = 1000;
        //#if __IPHONE_OS_VERSION_MIN_REQUIRED > __IPHONE_8_0
        [self.locationManager requestAlwaysAuthorization];
        //#endif
        [self.locationManager startUpdatingLocation];
    }
    
}

#pragma mark - CoreLocationDelegate

- (void)locationManager:(CLLocationManager *)manager didUpdateLocations:(NSArray<CLLocation *> *)locations
{
    CLLocation *currentLocation = [locations lastObject];
    
    BOOL sendWeather = [BleTool sendWeatherFilter];
    if (sendWeather)
    {
        
        BOOL ischina = [[ZCChinaLocation shared] isInsideChina:currentLocation.coordinate];
        CLGeocoder *geocoder = [[CLGeocoder alloc] init];
        if(ischina)
        {
            kHCH.weatherLocation = 1;
            
            [geocoder reverseGeocodeLocation:currentLocation completionHandler:^(NSArray<CLPlacemark *> * _Nullable placemarks, NSError * _Nullable error) {
                if (placemarks.count > 0)
                {
                    CLPlacemark *placemark = [placemarks objectAtIndex:0];
                    NSString *city = placemark.locality;
                    if (!city)
                    {
                        city = placemark.administrativeArea;
                    }
                    if (city)
                    {
                        // BOOL isYes = [AllTool isChinese:city];
                        // if (!isYes)
                        // {
                        //  return ;
                        // }
                        NSString *charecter = [city substringWithRange:NSMakeRange(city.length-1, 1)];
                        if ([charecter isEqualToString:@"市"])
                        {
                            city = [city substringWithRange:NSMakeRange(0, city.length - 1)];
                            [[AFAppDotNetAPIClient sharedClient] checkWeatherWithCityName:city];
                        }
                        else
                        {
                            [[AFAppDotNetAPIClient sharedClient] checkWeatherWithCityName:city];
                        }
                    }
                }
            }];
        }
        else
        {
            kHCH.weatherLocation = 2;
            [[AFAppDotNetAPIClient sharedClient] checkWeatherWithCityNameThree:currentLocation];
            
        }
        
    }
    
    [manager stopUpdatingLocation];
}

- (void)locationManager:(CLLocationManager *)manager didFailWithError:(NSError *)error
{
    if ([error code] == kCLErrorDenied)
    {
        //访问被拒绝
    }
    if ([error code] == kCLErrorLocationUnknown) {
        //无法获取位置信息
    }
}

-(void)locationManager:(CLLocationManager *)manager didUpdateHeading:(CLHeading *)newHeading
{
}
-(void)refresh
{
    [self.locationManager startUpdatingLocation];
}
@end
